name: build-dev

on:
  push:
    branches: [ dev ]
jobs:
  # build:
  #   name: Create cross-platform dev build
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.17
          
  #     - name: Test
  #       run: go test -v ./...

  #     - name: Build
  #       env:
  #         RELEASE: v2.0.${{ github.run_number }} 
  #         ArmoBEServer: api.armo.cloud
  #         ArmoAuthServer: eggauth.armo.cloud
  #         ArmoERServer: report.armo.cloud
  #         ArmoWebsite: portal.armo.cloud
  #         CGO_ENABLED: 0
  #       run: python3 --version && python3 build.py
      
  #     - name: Smoke Testing
  #       env:
  #         RELEASE: v2.0.${{ github.run_number }}
  #         KUBESCAPE_SKIP_UPDATE_CHECK: "true"
  #       run: python3 smoke_testing/init.py ${PWD}/build/${{ matrix.os }}/kubescape

  #     - name: Upload build artifacts 
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: kubescape-${{ matrix.os }}
  #         path: build/${{ matrix.os }}/kubescape 

  build-docker-quay:
    name: Build docker container, tag and upload to registry
    # needs: build
     
    
    # if: ${{ github.repository == 'armosec/kubescape' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Set name
        id: set-name
        run: echo '::set-output name=IMAGE_NAME::quay.io/${{ github.repository }}/kubescape:dev-v2.0.${{ github.run_number }}'

      # - name: Build the Docker image
      #   run: docker build . --file build/Dockerfile --tag ${{ steps.set-name.outputs.IMAGE_NAME }} --build-arg run_number=${{ github.run_number }}
      
      - name: user echo 
        id: set_user
        shell: bash
        env:  
          QUAY_USERNAME: ${{ secrets.QUAYIO_REGISTRY_USERNAME }}
        run: |
          if [[ ${QUAY_USERNAME} != "" ]]; then i=true; else i=false; fi
          echo "::set-output name=quay_configured::${{ toJSON(${i}) }}"

      - name: secret echo 
        run: echo ${{ secrets.QUAYIO_REGISTRY_USERNAME }}

      - name: Login to Quay.io
        if: fromJSON(steps.set_user.outputs.quay_configured) 
        env:
          QUAY_PASSWORD: ${{ secrets.QUAYIO_REGISTRY_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAYIO_REGISTRY_USERNAME }}
        run: docker login -u="${QUAY_USERNAME}" -p="${QUAY_PASSWORD}" quay.io
        
      # - name: Push Docker image
      #   run: |
      #     docker push ${{ steps.set-name.outputs.IMAGE_NAME }}
    
        
